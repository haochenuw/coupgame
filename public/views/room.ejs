<%- include("header"); -%>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<section class="jumbotron text-center">
<div class="album py-5 bg-light" id="roomPanel">
  <h1>Your room code is: <%= roomName %> </h1>

  <h1>You are player: <span id = "playerIndexDisplay"></span></h1>
  
  <pre id="roomStatus"></pre>

  <div id='roomActions'>
    <a href="#" class="btn btn-success" onclick="connect()">Connect</a>
    <a href="#" class="btn btn-success" onclick="start()">Start Game</a>
  </div>
</div>

<div id='gamePanel'>
    <div id='gameState' style="width: auto">
        <div id='player1State'>
            <h2>Token: <span id = "token"></span></h2>
            <h2>Life: <span id = "life"></span></h2>
            <h2>Cards:</h2>
            <ul id = "cards"></ul>
        </div>
        <div id='player2State'>
            <h2>Token: <span id = "token"></span></h2>
            <h2>Life: <span id = "life"></span></h2>
            <h2>Cards:</h2>
            <ul id = "cards"></ul>
        </div>
    </div>
    
    <div id='gameActions'>
        <a href="#" class="btn btn-success" onclick="incomeAction()">Income</a>
        <a href="#" class="btn btn-success" onclick="coupAction()">Coup</a>
        <a href="#" class="btn btn-success" onclick="taxAction()">Tax</a>
        <a href="#" class="btn btn-success" onclick="foreignAidAction()">Foreign Aid</a>
        <a href="#" class="btn btn-success" onclick="assasinateAction()">Assasinate</a>
        <a href="#" class="btn btn-success" onclick="stealAction()">Steal</a>
        <br/>
        <div id='challengeSection'>
            <h2>Challenge?</h2> 
            <a href="#" class="btn btn-danger" onclick="challenge(true)">Yes</a>
            <a href="#" class="btn btn-back" onclick="challenge(false)">No</a>
        </div>
        <div id='blockSection'>
            <h2>Block?</h2> 
            <a href="#" class="btn btn-danger" onclick="block(true)">Yes</a>
            <a href="#" class="btn btn-back" onclick="block(false)">No</a>
        </div>
        <div id='revealSection'>
            <h2>Choose a card to reveal</h2> 
            <a href="#" class="btn btn-danger" onclick="reveal(0)">Card 1</a>
            <a href="#" class="btn btn-danger" onclick="reveal(1)">Card 2</a>
        </div>
        <div id='surrenderSection'>
            <h2>Choose a card to surrender</h2> 
            <a href="#" class="btn btn-danger" onclick="surrender(0)">Card 1</a>
            <a href="#" class="btn btn-danger" onclick="surrender(1)">Card 2</a>
        </div>
    </div>
</div>

<div id="activityLogs">
    <ul class="log">
    </ul>
</div>

<div id="gameResultPanel">
    <h1> Game Over, winner is <span id="winner"></span></h1>
    <a href="#" class="btn btn-success" onclick="rematch()">Rematch</a>
</div>

</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js"></script>

<script type='text/javascript'>
    let localGameState; 
    let playerIndex; 
    const ul = document.querySelector(".log"); 

    $("#gameResultPanel").hide(); 

    function incomeAction(){
        socket.emit('action', {"name":"Income", "target": null}); 
    }

    function coupAction(){
        // let user select a target. 
        socket.emit('action', {"name":"Coup", "target": 1-playerIndex}); 
    }

    function taxAction(){
        socket.emit('action', {"name":"Tax", "target": null}); 
    }

    function foreignAidAction(){
        socket.emit('action', {"name":"ForeignAid", "target": null}); 
    }

    function assasinateAction(){
        socket.emit('action', {"name":"Assasinate", "target": 1-playerIndex}); 
    }

    function stealAction(){
        socket.emit('action', {"name":"Steal", "target": 1-playerIndex}); 
    }

    function challenge(isChallenge){
        socket.emit('challenge', isChallenge); 
    }

    function block(isBlock){
        socket.emit('block', isBlock); 
    }

    function reveal(cardIndex){
        socket.emit('reveal', cardIndex); 
    }

    function surrender(cardIndex){
        socket.emit('surrender', cardIndex); 
    }

    function rematch(){
        socket.emit('rematch'); 
    }

    let gameInProgress = false; 
    let gamePanel = document.getElementById('gamePanel'); 
    let roomActions = document.getElementById('roomActions'); 
    gamePanel.style.display = 'none'; 
    let socket; 
    let localRoomName = "<%= roomName %>"; 
    console.log(localRoomName); 

    function connect(){
        socket = io( {query: {
            room: localRoomName
          }}); 

        socket.on('playerIndex', index => {
            console.log(`playerIndex = ${index}`); 
            document.getElementById('playerIndexDisplay').innerText = index;
            playerIndex = index; 
        });

        socket.on('roomStatus', status =>{
            document.getElementById('roomStatus').innerText = status; 
        }); 

        socket.on('gameState', gameState =>{
            if (!gameInProgress) {
                gameInProgress = true; 
            }
            localGameState = gameState;
            gamePanel.style.display = 'block'; 
            roomActions.style.display = 'none'; 
            paintGameState(gameState); 
        });

        socket.on('activityLog', activity => {
            console.log(activity); 
            addItemToDOM(activity); 
        });

        socket.on('gameOver', winner => {
            console.log(`winner is ${winner}`); 
            document.getElementById('winner').innerText = winner; 
            gameInProgress = false; 
            $("#gameResultPanel").show(); 
            $("#gamePanel").hide(); 
        });

        socket.on('rematchConfirm', ()=>{
            $("#gameResultPanel").hide(); 
            // flush state
            $("#gamePanel").show(); 
            removeAllChildNodes($(".log")); 
        }); 
    }
    function start(){
        socket.emit('start'); 
        gameInProgress = true; 
    }

    function paintGameState(gameState){
        console.log(`painting gamestate = ${gameState}`); 
        let parsed = JSON.parse(gameState);
        paintPlayerState(document.getElementById('player1State'), parsed.playerStates[0]); 
        paintPlayerState(document.getElementById('player2State'), parsed.playerStates[1]); 
        // innerHTML = JSON.stringify(gameState, null, "  ");
    }

    function paintPlayerState(playerNode, playerState){
        let playerToken = playerNode.querySelector("#token"); 
        let playerLife = playerNode.querySelector("#life"); 
        let playerCards = playerNode.querySelector("#cards"); 
        playerToken.innerHTML = playerState.tokens; 
        playerLife.innerHTML = playerState.lifePoint; 
        removeAllChildNodes(playerCards);
        for(let i = 0; i < playerState.cards.length; i++){
            const li = document.createElement('li'); 
            li.innerHTML = JSON.stringify(playerState.cards[i]);  
            if (playerState.cards[i].isRevealed){
                li.classList.add('revealed');
            }
            playerCards.appendChild(li);
        }
    }

    function removeAllChildNodes(parent) {
        while (parent.firstChild) {
            parent.removeChild(parent.firstChild);
        }
    }

    function addItemToDOM(action) {    
        let activityString = "".concat(...['Player ',action.source, ' played ', action.name]);
        if (action.target !== null && action.target !== undefined){
            if (action.name === "reveal" || action.name === "surrender"){
                activityString = activityString.concat(...[' with card ', action.target]);
            } 
            else{
                activityString = "".concat(...[activityString, ' on player ', action.target]);
            }
        }
        const li = document.createElement('li')
        // li.setAttribute("data-id", itemId);
        // add toDoItem text to li
        li.innerText = activityString
        // add li to the DOM
        ul.appendChild(li);
    }

</script>


</body>

</html>